{"version":3,"sources":["redux/types.js","redux/actions.js","SingleComment.js","Comments.js","Likes.js","Spin.js","Title.js","App.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/middleware.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","ERROR_DISPLAY_ON","ERROR_DISPLAY_OFF","loaderOff","type","errorOn","text","dispatch","setTimeout","SingleComment","data","useState","commentText","setCommentText","id","useDispatch","useEffect","onSubmit","e","preventDefault","commentUpdate","className","onClick","commentDelete","value","onChange","target","hidden","Comments","props","textComment","setTextComment","comments","useSelector","state","commentsReducer","a","fetch","response","json","jsonData","uniqid","commentCreate","length","map","res","connect","likes","likesReducer","onIncrementLikes","onDecrementLikes","Spin","spinner","appReducer","loading","color","height","width","visible","Title","inputReducer","inputText","App","error","src","alt","initialState","rootReducer","combineReducers","action","commentsNew","name","itemIndex","findIndex","nextComments","slice","badWords","store","createStore","compose","applyMiddleware","thunk","next","some","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eca5b494.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const INPUT_TEXT = 'INPUT_TEXT';\r\nexport const COMMENT_CREATE = 'COMMENT_CREATE';\r\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE';\r\nexport const COMMENT_DELETE = 'COMMENT_DELETE';\r\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD';\r\nexport const LOADER_DISPLAY_ON = 'LOADER_DISPLAY_ON';\r\nexport const LOADER_DISPLAY_OFF = 'LOADER_DISPLAY_OFF';\r\nexport const ERROR_DISPLAY_ON = 'ERROR_DISPLAY_ON';\r\nexport const ERROR_DISPLAY_OFF = 'ERROR_DISPLAY_OFF';","import {\r\n  COMMENTS_LOAD,\r\n  COMMENT_CREATE,\r\n  COMMENT_DELETE,\r\n  COMMENT_UPDATE,\r\n  DECREMENT,\r\n  ERROR_DISPLAY_OFF,\r\n  ERROR_DISPLAY_ON,\r\n  INCREMENT,\r\n  INPUT_TEXT,\r\n  LOADER_DISPLAY_OFF,\r\n  LOADER_DISPLAY_ON,\r\n} from \"./types\";\r\n\r\nexport function incrementLikes() {\r\n  return {\r\n    type: INCREMENT,\r\n  };\r\n}\r\nexport function decrementLikes() {\r\n  return {\r\n    type: DECREMENT,\r\n  };\r\n}\r\nexport function inputText(text) {\r\n  return {\r\n    type: INPUT_TEXT,\r\n    text,\r\n  };\r\n}\r\nexport function commentCreate(text, id) {\r\n  return {\r\n    type: COMMENT_CREATE,\r\n    data: { text, id },\r\n  };\r\n}\r\nexport function commentUpdate(text, id) {\r\n  return {\r\n    type: COMMENT_UPDATE,\r\n    data: { text, id },\r\n  };\r\n}\r\nexport function commentDelete(id) {\r\n  return {\r\n    type: COMMENT_DELETE,\r\n    id,\r\n  };\r\n}\r\nexport function loaderOn() {\r\n  return {\r\n    type: LOADER_DISPLAY_ON,\r\n  };\r\n}\r\nexport function loaderOff() {\r\n  return {\r\n    type: LOADER_DISPLAY_OFF,\r\n  };\r\n}\r\nexport function errorOn(text) {\r\n  return dispatch => {\r\n    dispatch({\r\n        type: ERROR_DISPLAY_ON,\r\n        text,\r\n      \r\n    });\r\n    setTimeout(() => {\r\ndispatch(errorOff())\r\n    },2000)\r\n  }\r\n}\r\nexport function errorOff() {\r\n  return {\r\n    type: ERROR_DISPLAY_OFF,\r\n  };\r\n}\r\nexport function commentsLoad() {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(loaderOn());\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments?_limit=10\"\r\n      );\r\n      const jsonData = await response.json();\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: COMMENTS_LOAD,\r\n          data: jsonData,\r\n        });\r\n        dispatch(loaderOff());\r\n      }, 1000);\r\n    } catch (err) {\r\n      dispatch(errorOn(\"ОШИБКА API\"));\r\n      dispatch(loaderOff());\r\n    }\r\n  };\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { commentDelete, commentUpdate } from \"./redux/actions\";\r\n\r\nfunction SingleComment({ data }) {\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const { text, id } = data;\r\n  const dispatch = useDispatch();\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(commentUpdate(commentText, id));\r\n  };\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(commentDelete(id));\r\n  };\r\n  useEffect(() => {\r\n    if (text) {\r\n      setCommentText(text);\r\n    }\r\n  }, [text]);\r\n  const handleInput = (e) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n  return (\r\n    <form onSubmit={handleUpdate} className=\"comments-item\">\r\n      <div onClick={handleDelete} className=\"comments-item-delete\">\r\n        ❌\r\n      </div>\r\n      <input type=\"text\" value={commentText} onChange={handleInput} />\r\n      <input type=\"submit\" hidden />\r\n    </form>\r\n  );\r\n}\r\nexport default SingleComment;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport uniqid from \"uniqid\";\r\nimport { commentCreate, commentsLoad } from \"./redux/actions\";\r\n\r\nfunction Comments(props) {\r\n  const [textComment, setTextComment] = useState(\"\");\r\n  const comments = useSelector((state) => {\r\n    const { commentsReducer } = state;\r\n    return commentsReducer.comments;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = (e) => {\r\n    setTextComment(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = uniqid();\r\n    dispatch(commentCreate(textComment, id));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(commentsLoad());\r\n  }, []);\r\n  return (\r\n    <div className=\"card-comments\">\r\n      <form onSubmit={handleSubmit} className=\"comments-item-create\">\r\n        <input type=\"text\" value={textComment} onChange={handleInput} />\r\n        <input type=\"submit\" hidden />\r\n      </form>\r\n      {!!comments.length &&\r\n        comments.map((res) => {\r\n          return <SingleComment key={res.id} data={res} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\nexport default Comments;\r\n","import { connect } from \"react-redux\";\r\nimport { decrementLikes, incrementLikes } from \"./redux/actions\";\r\n\r\nfunction Likes(props) {\r\n  return (\r\n    <div className=\"button-controls\">\r\n      <button onClick={props.onIncrementLikes}>❤ {props.likes}</button>\r\n      <button onClick={props.onDecrementLikes}>Dislike</button>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { likesReducer } = state;\r\n  return {\r\n    likes: likesReducer.likes,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onIncrementLikes: () => dispatch(incrementLikes()),\r\n    onDecrementLikes: () => dispatch(decrementLikes()),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);\r\n","import Loader from \"react-loader-spinner\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Spin = (props) => {\r\n  const spinner = useSelector((state) => state.appReducer.loading);\r\n  return (\r\n    <div className=\"loader-styles\">\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        visible={spinner}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Spin;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { inputText } from \"./redux/actions\";\r\n\r\nfunction Title(props) {\r\n  const text = useSelector((state) => {\r\n    const { inputReducer } = state;\r\n    return inputReducer.text;\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(inputText(e.target.value));\r\n  };\r\n  return (\r\n    <div className=\"card-title\">\r\n      <div className=\"card-title-top\">\r\n        <input type=\"text\" onChange={handleChange} />\r\n      </div>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default Title;\r\n","import { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Comments from \"./Comments\";\nimport Likes from \"./Likes\";\nimport Spin from \"./Spin\";\nimport Title from \"./Title\";\n\nfunction App() {\n  const error = useSelector((state) => state.appReducer.error);\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <Spin />\n        <div className=\"card\">\n          {error && <div className=\"error-message\">{error}</div>}\n          <div className=\"card-image\">\n            <img src=\"./sea.jpg\" alt=\"surfing\" />\n            <Title />\n            <Likes />\n          </div>\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { DECREMENT, INCREMENT } from \"./types\";\r\n\r\nconst initialState = {\r\n  likes: 0,\r\n};\r\n\r\nexport const likesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return {\r\n        ...state,\r\n        likes: state.likes + 1,\r\n      };\r\n    case DECREMENT:\r\n      return {\r\n        ...state,\r\n        likes: state.likes - 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { INPUT_TEXT } from \"./types\";\r\n\r\nconst initialState = {\r\n  text: \"\",\r\n};\r\n\r\nexport const inputReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INPUT_TEXT:\r\n      return {\r\n        ...state,\r\n        text: action.text,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  COMMENTS_LOAD,\r\n  COMMENT_CREATE,\r\n  COMMENT_DELETE,\r\n  COMMENT_UPDATE,\r\n} from \"./types\";\r\nconst initialState = {\r\n  comments: [],\r\n};\r\nexport const commentsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case COMMENT_CREATE:\r\n      return {\r\n        ...state,\r\n        comments: [...state.comments, action.data],\r\n      };\r\n    case COMMENTS_LOAD:\r\n      const commentsNew = action.data.map((res) => {\r\n        return {\r\n          text: res.name,\r\n          id: res.id,\r\n        };\r\n      });\r\n      return {\r\n        ...state,\r\n        comments: commentsNew,\r\n      };\r\n    case COMMENT_UPDATE:\r\n      const { data } = action;\r\n      const { comments } = state;\r\n      const itemIndex = comments.findIndex((res) => res.id === data.id);\r\n      const nextComments = [\r\n        ...comments.slice(0, itemIndex),\r\n        data,\r\n        ...comments.slice(itemIndex + 1),\r\n      ];\r\n      return {\r\n        ...state,\r\n        comments: nextComments,\r\n      };\r\n    case COMMENT_DELETE:\r\n      return (() => {\r\n        const { id } = action;\r\n        const { comments } = state;\r\n        const itemIndex = comments.findIndex((res) => res.id === id);\r\n        const nextComments = [\r\n          ...comments.slice(0, itemIndex),\r\n\r\n          ...comments.slice(itemIndex + 1),\r\n        ];\r\n        return {\r\n          ...state,\r\n          comments: nextComments,\r\n        };\r\n      })();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ERROR_DISPLAY_OFF,\r\n  ERROR_DISPLAY_ON,\r\n  LOADER_DISPLAY_OFF,\r\n  LOADER_DISPLAY_ON,\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADER_DISPLAY_ON:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOADER_DISPLAY_OFF:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case ERROR_DISPLAY_ON:\r\n      return {\r\n        ...state,\r\n        error: action.text,\r\n      };\r\n    case ERROR_DISPLAY_OFF:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { likesReducer } from \"./likesReducer\";\r\nimport { inputReducer } from \"./inputReducer\";\r\nimport { commentsReducer } from \"./commentsReducer\";\r\nimport { appReducer } from \"./appReducer\";\r\nexport const rootReducer = combineReducers({\r\n  likesReducer,\r\n  inputReducer,\r\n  commentsReducer,\r\n  appReducer,\r\n});\r\n","import { errorOn } from \"./actions\";\r\nimport { COMMENT_CREATE } from \"./types\";\r\n\r\nconst badWords = [\"козёл\", \"осёл\"];\r\n\r\nexport function spamFilter({ dispatch }) {\r\n  return function (next) {\r\n    return function (action) {\r\n      if (action.type === COMMENT_CREATE) {\r\n        const hasBadWords = badWords.some((res) =>\r\n          action.data.text.includes(res)\r\n        );\r\n        if (hasBadWords) {\r\n          return dispatch(errorOn(\"УВАЖАЙТЕ РУССКИЙ ЯЗЫК\"));\r\n        }\r\n      }\r\n      return next(action);\r\n    };\r\n  };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { spamFilter } from \"./redux/middleware\";\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk, spamFilter))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}